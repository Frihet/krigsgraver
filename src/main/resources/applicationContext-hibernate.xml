<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!-- Configurer that replaces ${...} placeholders with values from a properties file -->
    <context:property-placeholder location="classpath:krigsgraver.properties" />

    <!--
        Use Apache Commons DBCP for connection pooling. See Commons DBCP documentation for the required JAR files.
        Alternatively you can use another connection pool such as C3P0, similarly configured using Spring.
    -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
        p:url="${jdbc.url}" p:username="${jdbc.username}" p:password="${jdbc.password}" />

    <!-- Hibernate SessionFactory. -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
        p:dataSource-ref="dataSource">

        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
            </props>
        </property>

        <!-- Include all annotated classes in the specified package(s). -->
        <property name="packagesToScan">
            <list>
                <value>no.freecode.krigsgraver.model</value>
            </list>
        </property>

        <property name="eventListeners">
            <map>
                <entry key="merge">
                    <bean class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener" />
                </entry>
            </map>
        </property>
    </bean>

    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA). -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"
        p:sessionFactory-ref="sessionFactory" />

    <!--
        Activates various annotations to be detected in bean classes: Spring's @Required and @Autowired, as well as JSR
        250's @Resource.
    -->
    <context:annotation-config />

    <!--
		Instruct Spring to perform declarative transaction management
		automatically on annotated classes.
	-->
    <tx:annotation-driven />

    <!--
        Exporter that exposes the Hibernate statistics service via JMX. Autodetects the service MBean, using its bean
        name as JMX object name.
    -->
<!--    <context:mbean-export />-->


    <!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= -->
<!--
    <bean id="deliveryDao" class="no.freecode.gcl.model.dao.DeliveryDaoImpl" />
    <bean id="locationDao" class="no.freecode.gcl.model.dao.LocationDaoImpl" />
    <bean id="reportHandler" class="no.freecode.gcl.model.dao.ReportHandler" />
    <bean id="userDao" class="no.freecode.gcl.model.dao.UserDaoImpl" />
-->

    <!-- Hibernate's JMX statistics service -->
<!--    <bean name="gcl:type=HibernateStatistics" class="org.hibernate.jmx.StatisticsService" autowire="byName" />-->

</beans>
