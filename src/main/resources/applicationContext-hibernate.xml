<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!-- Configurer that replaces ${...} placeholders with values from a properties file -->
    <context:property-placeholder location="classpath:krigsgraver.properties" />

<!-- 
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
        p:url="${jdbc.url}" p:username="${jdbc.username}" p:password="${jdbc.password}">
    </bean>
 -->

    <!-- Use C3P0 for connection pooling. -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass"><value>${jdbc.driverClassName}</value></property>
        <property name="jdbcUrl"><value>${jdbc.url}</value></property>
        <property name="user"><value>${jdbc.username}</value></property>
        <property name="password"><value>${jdbc.password}</value></property>
    </bean>

    <!-- Hibernate SessionFactory. -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" p:dataSource-ref="dataSource">

        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.hbm2ddl.export">true</prop>
                <prop key="hibernate.hbm2ddl.outputfilename">schema.sql</prop>
                <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>

                <!-- Investigate caching...? -->
<!-- 
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
 -->

                <prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.FSDirectoryProvider</prop>
                <prop key="hibernate.search.default.indexBase">${work.dir}/lucene/indexes</prop>
            </props>
        </property>

        <!-- Include all annotated classes in the specified package(s). -->
        <property name="packagesToScan">
            <list>
                <value>no.freecode.krigsgraver.model</value>
            </list>
        </property>

        <property name="eventListeners">
            <map>
                <entry key="merge">
                    <bean class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener" />
                </entry>
            </map>
        </property>
    </bean>

    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA). -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"
        p:sessionFactory-ref="sessionFactory" />

    <!--
        Activates various annotations to be detected in bean classes: Spring's @Required and @Autowired, as well as JSR
        250's @Resource.
    -->
    <context:annotation-config />

    <!--
		Instruct Spring to perform declarative transaction management
		automatically on annotated classes.
	-->
    <tx:annotation-driven />


    <!-- Data access objects. -->
    <bean id="personDao" class="no.freecode.krigsgraver.model.dao.PersonDao" />
    <bean id="cemeteryDao" class="no.freecode.krigsgraver.model.dao.CemeteryDao" />
    <bean id="graveDao" class="no.freecode.krigsgraver.model.dao.GraveDao" />
    <bean id="genericDao" class="no.freecode.krigsgraver.model.dao.GenericDao" />
    <bean id="userDao" class="no.freecode.krigsgraver.model.dao.UserDaoImpl" />
    <bean id="postalDistrictDao" class="no.freecode.krigsgraver.model.dao.PostalDistrictDao" />
    <bean id="infoPageDao" class="no.freecode.krigsgraver.model.dao.InfoPageDao" />

</beans>
