<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:security="http://www.springframework.org/schema/security"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
                http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <!-- Configures the @Controller programming model -->
    <mvc:annotation-driven  />

    <mvc:view-controller path="/" view-name="redirect:/search" />
    <mvc:view-controller path="/login" view-name="login" />
    <mvc:view-controller path="/krigsgraver/**" view-name="redirect:/" />
    <mvc:view-controller path="/errors/default" view-name="errors/default" />

    <security:global-method-security secured-annotations="enabled" />

    <context:property-placeholder location="classpath:krigsgraver.properties" />

    <!--  Scan for application @Components to deploy. -->
    <context:component-scan base-package="no.freecode.krigsgraver.web" />

<!-- 
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>
 -->

    <!-- How to handle different types of content (JSON, XML, HTML). -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="defaultContentType" value="text/html"/>

        <property name="mediaTypes">
            <map>
                <entry key="json" value="application/json" />
                <entry key="xml" value="application/xml" />
                <entry key="html" value="text/html"/>
            </map>
        </property>

        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
                    
                </bean>

                <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
                    <constructor-arg>
                        <bean class="org.springframework.oxm.xstream.XStreamMarshaller">
                            <property name="mode" value="1001" />
                            
                            <property name="annotatedClasses">
                                <array>
                                    <value>no.freecode.krigsgraver.model.Camp</value>
                                    <value>no.freecode.krigsgraver.model.CauseOfDeath</value>
                                    <value>no.freecode.krigsgraver.model.Cemetery</value>
                                    <value>no.freecode.krigsgraver.model.Grave</value>
                                    <value>no.freecode.krigsgraver.model.Nationality</value>
                                    <value>no.freecode.krigsgraver.model.Person</value>
                                    <value>no.freecode.krigsgraver.model.Rank</value>
                                    <value>no.freecode.krigsgraver.model.Stalag</value>
                                    <value>no.freecode.krigsgraver.model.dao.Paginator</value>
                                    <value>no.freecode.krigsgraver.web.SearchResult</value>
                                </array>
                            </property>

                            <property name="supportedClasses">
                                <array>
                                    <value>java.util.List</value>
                                    <value>no.freecode.krigsgraver.model.Camp</value>
                                    <value>no.freecode.krigsgraver.model.CauseOfDeath</value>
                                    <value>no.freecode.krigsgraver.model.Cemetery</value>
                                    <value>no.freecode.krigsgraver.model.Grave</value>
                                    <value>no.freecode.krigsgraver.model.Nationality</value>
                                    <value>no.freecode.krigsgraver.model.Person</value>
                                    <value>no.freecode.krigsgraver.model.Rank</value>
                                    <value>no.freecode.krigsgraver.model.Stalag</value>
                                    <value>no.freecode.krigsgraver.model.dao.Paginator</value>
                                    <value>no.freecode.krigsgraver.web.SearchResult</value>
                                </array>
                            </property>
                        </bean>
                    </constructor-arg>
                </bean>
            </list>
        </property>

        <property name="ignoreAcceptHeader" value="true" />
        <property name="favorParameter" value="false" />

        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="prefix" value="/WEB-INF/jsp/"/>
                    <property name="suffix" value=".jsp"/>
                </bean>
            </list>
        </property>
    </bean>

    <!-- Application Message Bundle -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="/WEB-INF/messages/messages" />
        <property name="cacheSeconds" value="${messages.cacheSeconds}" />
    </bean>

<!-- Force a specific locale:
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.FixedLocaleResolver">
        <property name="defaultLocale" value="en" />
    </bean>
 -->

    <!-- Saves a locale change using a cookie -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="no_nb" />
    </bean>

    <!-- Configures Handler Interceptors -->    
    <mvc:interceptors>
        <!-- Changes the locale when a 'locale' request parameter is sent; e.g. /?locale=de -->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />

        <!-- Open a new session and fetch data in JSP's whenever an object needs to be lazily loaded. -->
        <bean class="org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor">
            <property name="sessionFactory" ref="sessionFactory" />
            <property name="singleSession" value="false" />
        </bean>
    </mvc:interceptors>

    <!-- Uploading files to the application. -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    
        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="1000000"/>
    </bean>

    <!-- Set up regular re-indexing. -->
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        
        <property name="jobFactory">
            <bean class="org.springframework.scheduling.quartz.SpringBeanJobFactory" />
        </property>

        <property name="schedulerContextAsMap">
            <map>
                <entry key="personDao" value-ref="personDao" />
            </map>   
        </property>

        <property name="triggers">
            <list>
                <bean class="org.springframework.scheduling.quartz.CronTriggerBean">
                    <property name="jobDetail">
                        <bean class="org.quartz.JobDetail">
                        
                            <property name="name" value="indexJobDetail" />
                            <property name="jobClass" value="no.freecode.krigsgraver.search.IndexJob" />
                        </bean>
                    </property>

                    <!-- Specify the time using a cron expression (slightly different
                        from normal cron in that it allows you to specify seconds). -->
                    <property name="cronExpression" value="0 20 4 * * ?" />
<!--                    <property name="cronExpression" value="0 * * * * ?" />-->
                </bean>
            </list>
        </property>
    </bean>

    <bean class="no.freecode.krigsgraver.util.StartupJob" init-method="execute"/>
    
    <!--
        This bean resolves specific types of exceptions to corresponding
        logical view names for error views. The default behaviour of
        DispatcherServlet is to propagate all exceptions to the servlet
        container: this will happen here with all other types of
        exceptions.
    -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="order" value="0" />

        <property name="exceptionMappings">
            <props>
                <!--
                    <prop key="org.hibernate.exception.GenericJDBCException">dataAccessFailure</prop>
                -->

                <prop key="org.springframework.transaction.TransactionException">errors/dataAccessFailure</prop>
                
                <prop key="org.springframework.dao.DataIntegrityViolationException">errors/illegalDatabaseOperation</prop>
                
<!--                <prop key="org.springframework.dao.DuplicateKeyException">errors/duplicateKeyException</prop>-->

                <prop key="org.springframework.web.HttpMediaTypeNotAcceptableException">errors/HttpMediaTypeNotAcceptableException</prop>
                
<!--ConstraintViolationException-->

<!--                <prop key="org.springframework.security.AccessDeniedException">errors/accessDenied</prop>-->
                <prop key="PageNotFound">errors/default</prop>
            </props>
        </property>
<!-- 
        <property name="defaultErrorView" value="errors/default" />
 -->
    </bean>
</beans>
